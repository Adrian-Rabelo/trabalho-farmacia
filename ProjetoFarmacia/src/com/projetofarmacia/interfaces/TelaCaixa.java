/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.projetofarmacia.interfaces;

import com.projetofarmacia.DAO.FarmaciaDAO;
import com.projetofarmacia.DAO.FuncionarioDAO;
import com.projetofarmacia.DAO.ProdutoDAO;
import com.projetofarmacia.DAO.ReservasDAO;
import com.projetofarmacia.DAO.VendaDAO;
import com.projetofarmacia.dialogs.confirmarPagamentoCartao;
import com.projetofarmacia.dialogs.confirmarPagamentoDinheiro;
import static com.projetofarmacia.interfaces.ConsultarProduto.tabelaProdutos;
import com.projetofarmacia.javabeans.Farmacia;
import com.projetofarmacia.javabeans.Funcionario;
import com.projetofarmacia.javabeans.Produto;
import com.projetofarmacia.javabeans.Reservas;
import com.projetofarmacia.javabeans.Venda;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Calendoscopio
 */
public class TelaCaixa extends javax.swing.JFrame {
    private static final long serialVersionUID = 1L;
    public static double total;
    /**
     * Creates new form telaprincipalAdm
     */
    public TelaCaixa() {
        initComponents();
        this.setExtendedState(TelaCaixa.MAXIMIZED_BOTH);
        
        //this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("logocerto (2).png")).getImage());
       // ImageIcon icon = new ImageIcon("src/recursos/logo_barra.png");
        //barra.setIcon(icon);
        //icon.setImage(icon.getImage().getScaledInstance(barra.getWidth(), barra.getHeight(), Image.SCALE_DEFAULT));
        //barra.setIcon(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel01 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ScrollPane = new javax.swing.JScrollPane();
        tabelaProduto = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        campoTotal = new javax.swing.JFormattedTextField();
        btnDinheiro = new javax.swing.JButton();
        btnCartao = new javax.swing.JButton();
        btnCancelarCompra = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaReservados = new javax.swing.JTable();
        campoNome = new javax.swing.JTextField();
        btnProcurarReservados = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        campoPesquisa = new javax.swing.JTextField();
        btnProcurarProduto = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaProcurarProduto = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Farmacia");
        setBackground(new java.awt.Color(255, 255, 255));
        setLocationByPlatform(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        painel01.setBackground(new java.awt.Color(52, 152, 219));

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Caixa");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        tabelaProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Qtd", "Preço", "Data da venda", "funcionario", "Farmacia", "idProd", "idvenda"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaProduto.setGridColor(new java.awt.Color(51, 102, 255));
        tabelaProduto.setSurrendersFocusOnKeystroke(true);
        tabelaProduto.getTableHeader().setResizingAllowed(false);
        tabelaProduto.getTableHeader().setReorderingAllowed(false);
        tabelaProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelaProdutoMousePressed(evt);
            }
        });
        ScrollPane.setViewportView(tabelaProduto);

        jPanel1.setBackground(new java.awt.Color(52, 152, 219));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Total");

        campoTotal.setBackground(new java.awt.Color(52, 152, 219));
        campoTotal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        campoTotal.setForeground(new java.awt.Color(255, 255, 255));
        campoTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoTotal.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N

        btnDinheiro.setBackground(new java.awt.Color(52, 152, 219));
        btnDinheiro.setFont(new java.awt.Font("Segoe UI Black", 0, 11)); // NOI18N
        btnDinheiro.setForeground(new java.awt.Color(255, 255, 255));
        btnDinheiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/projetofarmacia/resources/cash.png"))); // NOI18N
        btnDinheiro.setText("Dinheiro");
        btnDinheiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDinheiroActionPerformed(evt);
            }
        });

        btnCartao.setBackground(new java.awt.Color(52, 152, 219));
        btnCartao.setFont(new java.awt.Font("Segoe UI Black", 0, 11)); // NOI18N
        btnCartao.setForeground(new java.awt.Color(255, 255, 255));
        btnCartao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/projetofarmacia/resources/payment-card (2).png"))); // NOI18N
        btnCartao.setText("Cartão");
        btnCartao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCartaoActionPerformed(evt);
            }
        });

        btnCancelarCompra.setBackground(new java.awt.Color(52, 152, 219));
        btnCancelarCompra.setFont(new java.awt.Font("Segoe UI Black", 0, 11)); // NOI18N
        btnCancelarCompra.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelarCompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/projetofarmacia/resources/basket_delete.png"))); // NOI18N
        btnCancelarCompra.setText("CANCELAR COMPRA");
        btnCancelarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCompraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancelarCompra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCartao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDinheiro)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(campoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCartao)
                        .addComponent(btnDinheiro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancelarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        tabelaReservados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "qtd", "tarja", "preco", "func", "produto", "id prod", "idvenda"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaReservados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelaReservadosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaReservados);
        if (tabelaReservados.getColumnModel().getColumnCount() > 0) {
            tabelaReservados.getColumnModel().getColumn(1).setMinWidth(0);
            tabelaReservados.getColumnModel().getColumn(1).setPreferredWidth(0);
            tabelaReservados.getColumnModel().getColumn(1).setMaxWidth(0);
            tabelaReservados.getColumnModel().getColumn(2).setMinWidth(0);
            tabelaReservados.getColumnModel().getColumn(2).setPreferredWidth(0);
            tabelaReservados.getColumnModel().getColumn(2).setMaxWidth(0);
            tabelaReservados.getColumnModel().getColumn(3).setMinWidth(0);
            tabelaReservados.getColumnModel().getColumn(3).setPreferredWidth(0);
            tabelaReservados.getColumnModel().getColumn(3).setMaxWidth(0);
            tabelaReservados.getColumnModel().getColumn(4).setMinWidth(0);
            tabelaReservados.getColumnModel().getColumn(4).setPreferredWidth(0);
            tabelaReservados.getColumnModel().getColumn(4).setMaxWidth(0);
            tabelaReservados.getColumnModel().getColumn(5).setMinWidth(0);
            tabelaReservados.getColumnModel().getColumn(5).setPreferredWidth(0);
            tabelaReservados.getColumnModel().getColumn(5).setMaxWidth(0);
            tabelaReservados.getColumnModel().getColumn(6).setMinWidth(0);
            tabelaReservados.getColumnModel().getColumn(6).setPreferredWidth(0);
            tabelaReservados.getColumnModel().getColumn(6).setMaxWidth(0);
            tabelaReservados.getColumnModel().getColumn(7).setMinWidth(0);
            tabelaReservados.getColumnModel().getColumn(7).setPreferredWidth(0);
            tabelaReservados.getColumnModel().getColumn(7).setMaxWidth(0);
        }

        campoNome.setBackground(new java.awt.Color(52, 152, 219));
        campoNome.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        campoNome.setForeground(new java.awt.Color(255, 255, 255));
        campoNome.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        campoNome.setCaretColor(new java.awt.Color(52, 152, 219));
        campoNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNomeActionPerformed(evt);
            }
        });
        campoNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoNomeKeyReleased(evt);
            }
        });

        btnProcurarReservados.setBackground(new java.awt.Color(52, 152, 219));
        btnProcurarReservados.setFont(new java.awt.Font("Segoe UI Black", 0, 11)); // NOI18N
        btnProcurarReservados.setForeground(new java.awt.Color(255, 255, 255));
        btnProcurarReservados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/projetofarmacia/resources/Folder Search-certo.png"))); // NOI18N
        btnProcurarReservados.setText("Procurar");

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nome");

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nome");

        campoPesquisa.setBackground(new java.awt.Color(52, 152, 219));
        campoPesquisa.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        campoPesquisa.setForeground(new java.awt.Color(255, 255, 255));
        campoPesquisa.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        campoPesquisa.setCaretColor(new java.awt.Color(52, 152, 219));
        campoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoPesquisaActionPerformed(evt);
            }
        });
        campoPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoPesquisaKeyReleased(evt);
            }
        });

        btnProcurarProduto.setBackground(new java.awt.Color(52, 152, 219));
        btnProcurarProduto.setFont(new java.awt.Font("Segoe UI Black", 0, 11)); // NOI18N
        btnProcurarProduto.setForeground(new java.awt.Color(255, 255, 255));
        btnProcurarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/projetofarmacia/resources/Folder Search-certo.png"))); // NOI18N
        btnProcurarProduto.setText("Procurar");
        btnProcurarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarProdutoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Reservados");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        tabelaProcurarProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome Produto", "quantidade", "Preço", "databenda", "func", "farmacial", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaProcurarProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelaProcurarProdutoMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaProcurarProduto);
        if (tabelaProcurarProduto.getColumnModel().getColumnCount() > 0) {
            tabelaProcurarProduto.getColumnModel().getColumn(0).setMinWidth(0);
            tabelaProcurarProduto.getColumnModel().getColumn(0).setPreferredWidth(0);
            tabelaProcurarProduto.getColumnModel().getColumn(0).setMaxWidth(0);
            tabelaProcurarProduto.getColumnModel().getColumn(2).setMinWidth(0);
            tabelaProcurarProduto.getColumnModel().getColumn(2).setPreferredWidth(0);
            tabelaProcurarProduto.getColumnModel().getColumn(2).setMaxWidth(0);
            tabelaProcurarProduto.getColumnModel().getColumn(4).setMinWidth(0);
            tabelaProcurarProduto.getColumnModel().getColumn(4).setPreferredWidth(0);
            tabelaProcurarProduto.getColumnModel().getColumn(4).setMaxWidth(0);
            tabelaProcurarProduto.getColumnModel().getColumn(5).setMinWidth(0);
            tabelaProcurarProduto.getColumnModel().getColumn(5).setPreferredWidth(0);
            tabelaProcurarProduto.getColumnModel().getColumn(5).setMaxWidth(0);
            tabelaProcurarProduto.getColumnModel().getColumn(6).setMinWidth(0);
            tabelaProcurarProduto.getColumnModel().getColumn(6).setPreferredWidth(0);
            tabelaProcurarProduto.getColumnModel().getColumn(6).setMaxWidth(0);
        }

        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Adicionar Produto");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        javax.swing.GroupLayout painel01Layout = new javax.swing.GroupLayout(painel01);
        painel01.setLayout(painel01Layout);
        painel01Layout.setHorizontalGroup(
            painel01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel01Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painel01Layout.createSequentialGroup()
                        .addGroup(painel01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                            .addGroup(painel01Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnProcurarProduto))
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel01Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnProcurarReservados))
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painel01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painel01Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(3, 3, 3))
                            .addComponent(ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE))))
                .addContainerGap())
        );
        painel01Layout.setVerticalGroup(
            painel01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel01Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(painel01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel01Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(painel01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnProcurarReservados, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painel01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(painel01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(campoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnProcurarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
                    .addGroup(painel01Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)))
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel01, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel01, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoPesquisaActionPerformed

    private void campoNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNomeActionPerformed

    private void btnCartaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCartaoActionPerformed
        confirmarPagamentoCartao cpc = new confirmarPagamentoCartao(this, true);
        cpc.setVisible(true);

    }//GEN-LAST:event_btnCartaoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        ListarProdutos();
    }//GEN-LAST:event_formWindowOpened

    private void tabelaProcurarProdutoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaProcurarProdutoMousePressed
            Point ponteiro = evt.getPoint();
            int cliques = evt.getClickCount();
            if (cliques == 2 && tabelaProcurarProduto.getSelectedRow() != -1) {
                transfereItens(tabelaProcurarProduto, tabelaProduto);
                double subtotal;
                subtotal = Double.parseDouble(tabelaProcurarProduto.getValueAt(tabelaProcurarProduto.getSelectedRow(), 3).toString());
                System.out.println("preço do produto: " + subtotal);
                total += subtotal;
                campoTotal.setText(String.valueOf(total));
                cadastrarVenda();
            }
    }//GEN-LAST:event_tabelaProcurarProdutoMousePressed

    private void btnProcurarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarProdutoActionPerformed
        
        
    }//GEN-LAST:event_btnProcurarProdutoActionPerformed

    private void tabelaProdutoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaProdutoMousePressed
        Point ponteiro = evt.getPoint();
        int cliques = evt.getClickCount();
        if (cliques == 2 && tabelaProduto.getSelectedRow() != -1) {
            double subtotal;
            subtotal = Double.parseDouble(tabelaProduto.getValueAt(tabelaProduto.getSelectedRow(), 2).toString());
//            total -= subtotal;
            if (total <=0) {
                total = 0;
            }
            removeItens(tabelaProduto);
            campoTotal.setText(String.valueOf(total));
        } 
    }//GEN-LAST:event_tabelaProdutoMousePressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        ListarAbertos();
        if (tabelaReservados.getRowCount() > 0) {
            campoNome.setText(tabelaReservados.getValueAt(0, 0).toString());
        }
    }//GEN-LAST:event_formWindowActivated

    private void tabelaReservadosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaReservadosMousePressed
        int cliques = evt.getClickCount();
        Venda v = new Venda();
        VendaDAO dao = new VendaDAO();
        if (cliques == 2 && tabelaReservados.getSelectedRow() != -1) {
            transfereItens(tabelaReservados, tabelaProduto);
            v.setIdVenda(Integer.parseInt(tabelaReservados.getValueAt(tabelaReservados.getSelectedRow(), 7).toString()));
            dao.alterarStatus(v);
            double subtotal;
            subtotal = Double.parseDouble(tabelaReservados.getValueAt(tabelaReservados.getSelectedRow(), 3).toString());
            DefaultTableModel tabelaOrigin = (DefaultTableModel) tabelaReservados.getModel();
            tabelaOrigin.removeRow(tabelaReservados.getSelectedRow());
            System.out.println("preço do produto: " + subtotal);
            total += subtotal;
            campoTotal.setText(String.valueOf(total));
            
        }
    }//GEN-LAST:event_tabelaReservadosMousePressed

    private void btnDinheiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDinheiroActionPerformed
        confirmarPagamentoDinheiro cp = new confirmarPagamentoDinheiro(this, true);
        cp.setVisible(true);
        
    }//GEN-LAST:event_btnDinheiroActionPerformed

    private void campoPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoPesquisaKeyReleased
        if (evt.getKeyCode() != KeyEvent.VK_ALPHANUMERIC) {
            Buscar(campoPesquisa.getText());
        }

    }//GEN-LAST:event_campoPesquisaKeyReleased

    private void campoNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeKeyReleased
        if (evt.getKeyCode() != KeyEvent.VK_ALPHANUMERIC) {
            BuscarCarrinho(campoNome.getText());
        }
    }//GEN-LAST:event_campoNomeKeyReleased

    private void btnCancelarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCompraActionPerformed
        cancelaCompra();
    }//GEN-LAST:event_btnCancelarCompraActionPerformed

     public void Buscar(String nome) {
        try {
            Farmacia far = new Farmacia();
            far.setIdFarmacia(TelaLogin.idFar);
            ProdutoDAO dao = new ProdutoDAO();
            List<Produto> listaDeProdutos = dao.buscarProduto(nome, far);
            DefaultTableModel modelo = (DefaultTableModel) tabelaProcurarProduto.getModel();
            modelo.setNumRows(0);
            Funcionario f = new Funcionario();
            FuncionarioDAO daof = new FuncionarioDAO();
            f.setIdFuncionario(TelaLogin.idFunc);
            for (Produto p: listaDeProdutos) {
                modelo.addRow(new Object[] {
                    p.getIdProduto(),
                    p.getNomeProduto(),
                    p.getQuantidade(),
                    p.getPreco(),
                    new SimpleDateFormat("dd/MM/yyyy").format(p.getDataValidade()),
                    daof.nomeFuncionario(f),
                    p.getFarmacia().getNomeFarmacia(),
                    p.getTipoProduto().getTipoProduto(),
                });
            }
        } catch (Exception e) {
            System.out.println("erro" + e);
            e.printStackTrace();
        }
    }
     
    public void BuscarCarrinho(String nome) {
        try {
            Farmacia far = new Farmacia();
            far.setIdFarmacia(TelaLogin.idFar);
            VendaDAO dao = new VendaDAO();
            List<Venda> listaDeVenda = dao.buscarCarrinho(nome, far);
            DefaultTableModel modelo = (DefaultTableModel) tabelaReservados.getModel();
            modelo.setNumRows(0);
            Funcionario f = new Funcionario();
            FuncionarioDAO daof = new FuncionarioDAO();
            f.setIdFuncionario(TelaLogin.idFunc);
            for (Venda v : listaDeVenda) {
                modelo.addRow(new Object[] {
                    v.getNome(),
                });
            }
        } catch (Exception e) {
            System.out.println("erro" + e);
            e.printStackTrace();
        }
    }
    private void removeItens(JTable tabela) {
        if (tabela.getSelectedRowCount() != 0) {
            DefaultTableModel tabel = (DefaultTableModel) tabela.getModel();
            tabel.removeRow(tabela.getSelectedRow());
        } else {
            System.out.println("nenhuma linha");
        }
    }
    private void transfereItens(JTable tabelaOrigem, JTable tabelaDestino) {
        if (tabelaOrigem.getSelectedRowCount() != 0) {
            DefaultTableModel tabelaDestiny = (DefaultTableModel) tabelaDestino.getModel();
            FarmaciaDAO daof = new FarmaciaDAO();
            Farmacia f = new Farmacia();
            VendaDAO daov = new VendaDAO();
            if (tabelaOrigem == tabelaReservados) {
                f.setIdFarmacia(TelaLogin.idFar);
                Object[] obj = {
                tabelaOrigem.getValueAt(tabelaOrigem.getSelectedRow(), 5),
                1,
                tabelaOrigem.getValueAt(tabelaOrigem.getSelectedRow(), 3),
                dataComp(),
                tabelaOrigem.getValueAt(tabelaOrigem.getSelectedRow(), 4),
                daof.nomeFarmacia(f),
                tabelaOrigem.getValueAt(tabelaOrigem.getSelectedRow(), 6),
                
                };
                tabelaDestiny.addRow(obj);
            } else {
                
                Object[] obj = {
                tabelaOrigem.getValueAt(tabelaOrigem.getSelectedRow(), 1),
                1,
                tabelaOrigem.getValueAt(tabelaOrigem.getSelectedRow(), 3),
                tabelaOrigem.getValueAt(tabelaOrigem.getSelectedRow(), 4),
                tabelaOrigem.getValueAt(tabelaOrigem.getSelectedRow(), 5),
                tabelaOrigem.getValueAt(tabelaOrigem.getSelectedRow(), 6),
                tabelaOrigem.getValueAt(tabelaOrigem.getSelectedRow(), 0),
                Listarids()
            };
                tabelaDestiny.addRow(obj);
                System.out.println(Listarids());
            }
            
            
        } else {
            System.out.println("nenhuma linha");
        }
    }
    public void cadastrarVenda() {
        try {
            VendaDAO dao = new VendaDAO();
            Venda obj = new Venda();
            Farmacia f = new Farmacia();
            Funcionario fun = new Funcionario();
            Produto p = new Produto();
            obj.setDataVenda(new SimpleDateFormat("dd/MM/yyyy").parse(dataComp()));
            p.setNomeProduto(tabelaProcurarProduto.getValueAt(tabelaProcurarProduto.getSelectedRow(), 1).toString());
            p.setIdProduto(Integer.parseInt(tabelaProcurarProduto.getValueAt(tabelaProcurarProduto.getSelectedRow(), 0).toString()));
            p.setPreco(Double.parseDouble(tabelaProcurarProduto.getValueAt(tabelaProcurarProduto.getSelectedRow(), 3).toString()));
            obj.setQuantidade(1);
            obj.setNome(campoNome.getText());
            obj.setTarja("Sem tarja");
            obj.setTipo(tabelaProcurarProduto.getValueAt(tabelaProcurarProduto.getSelectedRow(), 7).toString());
            obj.setTotal(0);
            obj.setStatus("NO CAIXA");
            f.setIdFarmacia(TelaLogin.idFar);
            fun.setIdFuncionario(TelaLogin.idFunc);
            obj.setProduto(p);
            obj.setFarmacia(f);
            obj.setFuncionario(fun);

            dao.insereVenda(obj);
            
        } catch (ParseException e) {
            throw new RuntimeException(e);
        }
    }
    
     public int Listarids() {
        try {
            VendaDAO dao = new VendaDAO();
            Farmacia f = new Farmacia();
            f.setIdFarmacia(TelaLogin.idFar);
            List<Venda> listaDeVenda = dao.listarIds(f);
            int id = 0;
            for(Venda v : listaDeVenda) {
                id = v.getIdVenda();
            }
            return id+1;
        } catch (Exception e) {
           throw new RuntimeException(e);
        }
    }
    
    public void ListarAbertos() {
        try {
            VendaDAO dao = new VendaDAO();
            Farmacia far = new Farmacia();
            far.setIdFarmacia(TelaLogin.idFar);
            List<Venda> listaDeProdutos = dao.listarAberto(far);
            DefaultTableModel modelo = (DefaultTableModel) tabelaReservados.getModel();
            modelo.setNumRows(0);
            
            for (Venda v: listaDeProdutos) {
                modelo.addRow(new Object[] {
                    v.getNome(),
                    v.getQuantidade(),
                    v.getTarja(),
                    v.getProduto().getPreco(),
                    v.getFuncionario().getNomeFuncionario(),
                    v.getProduto().getNomeProduto(),
                    v.getProduto().getIdProduto(),
                    v.getIdVenda()
                        
                });
            }
        } catch (Exception e) {
           throw new RuntimeException(e);
        }
        
    }
    private void ListarProdutos() {
        try {
            Farmacia far = new Farmacia();
            far.setIdFarmacia(TelaLogin.idFar);
            ProdutoDAO dao = new ProdutoDAO();
            List<Produto> listaDeProdutos = dao.listarProduto(far);
            DefaultTableModel modelo = (DefaultTableModel) tabelaProcurarProduto.getModel();
            modelo.setNumRows(0);
            dataComp();
            Funcionario f = new Funcionario();
            FuncionarioDAO daof = new FuncionarioDAO();
            f.setIdFuncionario(TelaLogin.idFunc);
            for (Produto p: listaDeProdutos) {
                modelo.addRow(new Object[] {
                    p.getIdProduto(),
                    p.getNomeProduto(),
                    p.getQuantidade(),
                    p.getPreco(),
                    dataComp(),
                    daof.nomeFuncionario(f),
                    p.getFarmacia().getNomeFarmacia(),
                    p.getTipoProduto().getTipoProduto(),
                });
            }
        } catch (Exception e) {
            System.out.println("erro" + e);
            e.printStackTrace();
        }
        
    }
    private void cancelaCompra() {
        Venda obj = new Venda();
        VendaDAO dao = new VendaDAO();
        Produto p = new Produto();
        ProdutoDAO pdao = new ProdutoDAO();
        for (int i = 0; i < TelaCaixa.tabelaProduto.getRowCount(); i++) {
            obj.setNome("CANCELADO");
            obj.setStatus("FINALIZADO");
            dao.finalizarVenda(obj);
        }
        TelaCaixa.total = 0;
        TelaCaixa.campoTotal.setText("");
        TelaFarmaceutico.limparTabela(TelaCaixa.tabelaProduto);
    }
    
    private String dataComp() {
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDateTime now = LocalDateTime.now();
//        System.out.println(Type.valueOf(dtf.format(now)));
        return dtf.format(now);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TelaCaixa().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JButton btnCancelarCompra;
    private javax.swing.JButton btnCartao;
    private javax.swing.JButton btnDinheiro;
    private javax.swing.JButton btnProcurarProduto;
    private javax.swing.JButton btnProcurarReservados;
    public static javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoPesquisa;
    public static javax.swing.JFormattedTextField campoTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JPanel painel01;
    private javax.swing.JTable tabelaProcurarProduto;
    public static javax.swing.JTable tabelaProduto;
    public static javax.swing.JTable tabelaReservados;
    // End of variables declaration//GEN-END:variables

   
}
